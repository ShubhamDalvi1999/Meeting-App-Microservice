apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db
  namespace: meeting-app
  labels:
    app: postgres-db
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
      - name: postgres-server
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: pg-port
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: meeting-app-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: meeting-app-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: meeting-app-secrets
              key: POSTGRES_PASSWORD
        resources:
          limits:
            memory: "256Mi"
            cpu: "200m"
          requests:
            memory: "128Mi"
            cpu: "100m"
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
          subPath: postgres
      volumes:
      - name: postgres-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-db
  namespace: meeting-app
  labels:
    app: postgres-db
    type: internal
spec:
  selector:
    app: postgres-db
  ports:
  - name: pg-port
    port: 5432
    targetPort: pg-port 