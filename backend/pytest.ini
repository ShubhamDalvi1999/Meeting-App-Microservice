[pytest]
# Test discovery settings
testpaths = auth-service/tests flask-service/tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test output settings
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test execution settings
addopts = 
    --verbose
    --strict-markers
    # Coverage settings
    --cov=.
    --cov-report=term
    --cov-report=html:.coverage_html
    # JUnit XML report for CI integration
    --junitxml=test-results.xml
    # Output test durations
    --durations=10

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Tests that are slow to execute
    auth: Authentication-related tests
    meetings: Meeting-related tests
    api: API endpoint tests
    service: Service layer tests
    utils: Utility function tests
    model: Data model tests
    error: Error handling tests
    logging: Logging-related tests
    middleware: Middleware-related tests
    schema: Schema-related tests

# Fail on warnings
filterwarnings =
    error
    # Ignore specific warnings as needed
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ImportWarning

# Cache
cache_dir = .pytest_cache 